language: java

jdk:
  - openjdk11

env:
  global:
    - MAVEN_CLI_OPTS=" --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=false -U  -q -Dlogging.level.root=off -Droot.log.level=off"
    - MAVEN_TEST_OPTS=" -Dspring.main.banner-mode=off -Denforcer.skip -q "
    - MAVEN_CMD="mvn ${MAVEN_CLI_OPTS} install ${MAVEN_TEST_OPTS}"
    - UPDATEBOT_VERSION="1.1.53"
    - JX_RELEASE_VERSION="1.0.24"
    - GIT_EMAIL="build_user@alfresco.com"

before_install:
  - echo -e "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com" >>  ~/.git-credentials
  - git config --global user.email "${GIT_EMAIL}"
  - mkdir -p $HOME/.m2
  - cp settings.xml $HOME/.m2
  - echo MAVEN_OPTS=-Xmx1536m > ~/.mavenrc  
  - mkdir $HOME/tmp || echo "~/tmp creation"
  - if ! [ -f $HOME/tmp/jx-release-version ]; then curl -Ls https://github.com/jenkins-x/jx-release-version/releases/download/v${JX_RELEASE_VERSION}/jx-release-version_${JX_RELEASE_VERSION}_linux_amd64.tar.gz|  tar xvz -C $HOME/tmp; fi
  - if ! [ -f $HOME/tmp/updatebot.jar ]; then curl -Ls -o $HOME/tmp/updatebot.jar   https://repo1.maven.org/maven2/io/jenkins/updatebot/updatebot/${UPDATEBOT_VERSION}/updatebot-${UPDATEBOT_VERSION}.jar; fi
  - sudo cp $HOME/tmp/jx-release-version /usr/bin/jx-release-version
  - sudo cp $HOME/tmp/updatebot.jar  /usr/bin/updatebot.jar
  - echo "java -jar /usr/bin/updatebot.jar \$@" > updatebot
  - sudo cp updatebot  /usr/bin/updatebot
  - sudo chmod a+x /usr/bin/updatebot
  - export PREVIEW_NAMESPACE=$(echo "$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER-$TRAVIS_JOB_ID"|  tr '[:upper:]' '[:lower:]'|tr . -|tr - "0")
  - if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then  echo $(jx-release-version) > VERSION; else echo 0.0.${TRAVIS_BUILD_ID:(-4)}> VERSION;fi
  - export VERSION=$(cat VERSION)
  - echo "Version=$VERSION"
  - export GATEWAY_HOST="gateway.$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN"
  - export SSO_HOST="identity.$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN"
# cache:
#   directories:
#     - ${HOME}/.m2/repository
#     - ${HOME}/tmp/
#     - ${HOME}/.helm/
services:
  - docker

branches:
  only:
    - master
    - develop

# Send coverage data
after_success:
  bash <(curl -s https://codecov.io/bash)

after_failure:
  - cat **/target/surefire-reports/*.xml | grep -B 1 -A 10 "<error"
  - cat **/target/failsafe-reports/*.xml | grep -B 1 -A 10 "<error"
notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/4eabeeadee998a77068b
    on_success: change
    on_failure: always
    on_start: never

