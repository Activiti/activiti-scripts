import: Activiti/activiti-scripts:.travis.java.yml@dev-almerico-3212-movepropogation-to-trtavis

stages:
- name: build
- name: tag
  if: type != pull_request
- name: deploy
  if: type != pull_request
- name: docker
  if: type != pull_request
- name: updatebot
  if: type != pull_request
- name: docker
  if: type != pull_request
  
jobs:
  include:
  - name: build application
    stage: build
    script:
    - travis_wait ${TRAVIS_WAIT_TIMEOUT} mvn ${MAVEN_CLI_OPTS} clean verify -B -DskipITs=false   -Dlogging.root.level=off -Dspring.main.banner-mode=off
  
  - name: Create a tag
    stage: tag
    script: |
      mvn versions:set -DnewVersion=$(cat VERSION)
      git add --all
      git commit -m "Release $(cat VERSION)" --allow-empty
      git tag -fa v$(cat VERSION) -m "Release version $(cat VERSION)"|| travis_terminate 1;
      git push -f -q https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git v$(cat VERSION)|| travis_terminate 1;
      
  - name: Deploy to nexus
    stage: deploy
    script:
    - travis_wait ${TRAVIS_WAIT_TIMEOUT} mvn versions:set -DnewVersion=$(cat VERSION)|| travis_terminate 1;
    - travis_wait ${TRAVIS_WAIT_TIMEOUT} mvn clean deploy -DskipTests|| travis_terminate 1; 
  - name: create docker image and push it 
    stage: docker
    script:
    - travis_wait ${TRAVIS_WAIT_TIMEOUT} mvn ${MAVEN_CLI_OPTS} clean install -Dlogging.root.level=off -Dspring.main.banner-mode=off
    - docker build --label "GIT_COMMIT=$TRAVIS_COMMIT" --label "GIT_BRANCH=$BRANCH" --tag "$DOCKER_IMAGE_REPOSITORY:$TRAVIS_BUILD_NUMBER" .
    - curl -sSL https://download.sourceclear.com/ci.sh | CACHE_DIR=${HOME}/sourceclear 
    - travis_wait ${TRAVIS_WAIT_TIMEOUT} bash -s -- scan --image "$DOCKER_IMAGE_REPOSITORY:$TRAVIS_BUILD_NUMBER"
    - |
          if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]
          then
            for DOCKER_TAG in $BRANCH $(cat VERSION)
            do
              docker tag "$DOCKER_IMAGE_REPOSITORY:$TRAVIS_BUILD_NUMBER" "$DOCKER_REGISTRY/$DOCKER_IMAGE_REPOSITORY:$DOCKER_TAG"
              docker push "$DOCKER_REGISTRY/$DOCKER_IMAGE_REPOSITORY:$DOCKER_TAG"
            done
          else
            echo skip scan and push docker image on pull request
          fi
  - name: Update versions in other components
    stage: updatebot
    script:
    - echo "VERSION=$(cat VERSION)|cd $MAKEFILE_PATH && make updatebot/push-version|| travis_terminate 1;"
    - export VERSION=$(cat VERSION)|make -f $MAKEFILE_PATH/Makefile updatebot/push-version|| travis_terminate 1;
    
before_install:
  - source ./build.properties
  - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY"
