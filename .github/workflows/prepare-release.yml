on:
  push:
    branches: [ gh-3903-gh-action-workflow ]

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    env:
      FULL_CHART_DIR: full-chart
    steps:
      - name: Installing activiti-scripts
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: Alfresco/alfresco-build-tools/.github/actions/release-descriptor-loader@aae-8254-actions-for-activiti-script
        id: load-descriptor
        with:
          release-descriptor: release.yaml

      - name: Set global variables
        env:
          RELEASE_VERSION: ${{steps.load-descriptor.outputs.version}}
          PRE_RELEASE_SUFFIX: alpha
        run: |
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "TAG_PATTERN=${RELEASE_VERSION%-mock*}-$PRE_RELEASE_SUFFIX*" >> $GITHUB_ENV

      - name: Checkout activiti-cloud-application
        uses: actions/checkout@v3
        with:
          repository: 'Activiti/activiti-cloud-application'
          path: 'repos/activiti-cloud-application'

      - name: Fetch Java Project Tags to release
        id: java-tags
        run: |
          ./gh-actions-scripts/fetch-activiti-tags-from.sh -t "$TAG_PATTERN" -p repos/activiti-cloud-application

      - name: create-staging-repository
        id: staging
        uses: Alfresco/alfresco-build-tools/.github/actions/nexus-create-staging@aae-8254-actions-for-activiti-script
        with:
          staging-description: Activiti staging ${{ steps.load-descriptor.outputs.version }}
          nexus-profile-id: "${{ secrets.NEXUS_ACTIVITI7_PROFILE_ID }}"
          nexus-username: "${{ secrets.NEXUS_USERNAME }}"
          nexus-password: "${{ secrets.NEXUS_PASSWORD }}"

      - name: Checkout full chart
        uses: actions/checkout@v3
        with:
          path: ${{ env.FULL_CHART_DIR }}
          repository: Activiti/activiti-cloud-full-chart

      - uses: Alfresco/alfresco-build-tools/.github/actions/git-latest-tag@aae-8254-actions-for-activiti-script
        id: latest-full-chart-tag
        with:
          pattern: ${{ env.TAG_PATTERN }}
          repository-directory: ${{ env.FULL_CHART_DIR }}

      - name: Fetch chart tags to release
        id: chart-tags
        working-directory: ${{ env.FULL_CHART_DIR }}
        env:
          FULL_CHART_TAG: ${{steps.latest-full-chart-tag.outputs.tag}}
        run: |
          git checkout $FULL_CHART_TAG
          COMMON_CHART_TAG=$(yq e '.dependencies[] | select (.alias == "activiti-cloud-modeling") | .version' charts/activiti-cloud-full-example/requirements.yaml)
          echo "::set-output name=common-chart-tag::$COMMON_CHART_TAG"
          echo "::set-output name=full-chart-tag::$FULL_CHART_TAG"

      - name: Add release info
        env:
          STAGING_REPOSITORY_ID: ${{ steps.staging.outputs.staging-repository }}
          ACTIVITI_BASE_TAG: ${{ steps.java-tags.outputs.activiti-tag }}
          ACTIVITI_CLOUD_BASE_TAG: ${{ steps.java-tags.outputs.activiti-cloud-tag }}
          ACTIVITI_CLOUD_APPLICATION_BASE_TAG: ${{ steps.java-tags.outputs.activiti-cloud-application-tag }}
          COMMON_CHART_TAG: ${{ steps.chart-tags.outputs.common-chart-tag }}
          FULL_CHART_TAG: ${{ steps.chart-tags.outputs.full-chart-tag }}
          STAGING_REPOSITORY_FILE: maven-config/staging-repository.txt
        run: |
          echo "$STAGING_REPOSITORY_ID" > "$STAGING_REPOSITORY_FILE"

          yq -i e '.release.baseTag.activiti = env(ACTIVITI_BASE_TAG)' release.yaml
          yq -i e '.release.baseTag.activitiCloud = env(ACTIVITI_CLOUD_BASE_TAG)' release.yaml
          yq -i e '.release.baseTag.activitiCloudApplication = env(ACTIVITI_CLOUD_APPLICATION_BASE_TAG)' release.yaml
          yq -i e '.release.baseTag.commonChart = env(COMMON_CHART_TAG)' release.yaml
          yq -i e '.release.baseTag.fullChart = env(FULL_CHART_TAG)' release.yaml
          yq -i e '.release.stagingRepository = env(STAGING_REPOSITORY_ID)' release.yaml

      - uses: Alfresco/alfresco-build-tools/.github/actions/git-commit-changes@v1.12.0
        with:
          username: ${{ secrets.BOT_GITHUB_USERNAME }}
          add-options: -A
          commit-message: Update release information for ${{env.RELEASE_VERSION}}

      - name: Create release branch
        env:
          RELEASE_BRANCH: releases/${{env.RELEASE_VERSION}}
        run: |
          git checkout -b "$RELEASE_BRANCH"
          git push origin "$RELEASE_BRANCH"
