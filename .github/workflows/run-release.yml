name: Release Activiti Cloud

on:
  push:
    branches: ['releases/main/**']

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name || github.run_id }}
  cancel-in-progress: true

jobs:
  load-release-info:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.load-descriptor.outputs.version }}
      next-version: ${{ steps.load-descriptor.outputs.next-version }}
      notes-start-tag: ${{ steps.load-descriptor.outputs.notes-start-tag }}
      mock: ${{ steps.load-descriptor.outputs.mock }}
      activiti-tag: ${{ steps.load-descriptor.outputs.activiti-tag }}
      activiti-cloud-tag: ${{ steps.load-descriptor.outputs.activiti-cloud-tag }}
      activiti-cloud-application-tag: ${{ steps.load-descriptor.outputs.activiti-cloud-application-tag }}
      common-chart-tag: ${{ steps.load-descriptor.outputs.common-chart-tag }}
      full-chart-tag: ${{ steps.load-descriptor.outputs.full-chart-tag }}
      staging-repository: ${{ steps.load-descriptor.outputs.staging-repository }}

    steps:
      - name: Installing activiti-scripts
        uses: actions/checkout@v3

      - uses: Alfresco/alfresco-build-tools/.github/actions/load-release-descriptor@v1.27.0
        id: load-descriptor
        with:
          release-descriptor: release.yaml

  release-modeling-app:
    runs-on: ubuntu-latest
    needs: load-release-info
    env:
      MODELING_APP_DIR: modeling-app
      MODELING_APP_BASE_REF: master
      DOCKERHUB_ORG: activiti
      RELEASE_VERSION: "${{ needs.load-release-info.outputs.version }}"
      GH_PACKAGES_READ_ONLY_TOKEN: ""
    steps:
      - name: Checkout modeling-app
        uses: actions/checkout@v3
        with:
          path: ${{ env.MODELING_APP_DIR }}
          repository: Activiti/activiti-modeling-app
          ref: ${{ env.MODELING_APP_BASE_REF }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: Alfresco/alfresco-build-tools/.github/actions/git-check-existing-tag@v1.27.0
        id: check-tag
        with:
          tag: ${{ env.RELEASE_VERSION }}
          repository-directory: ${{ env.MODELING_APP_DIR }}

      - name: update commit ref and version
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: |
          sed -i -e "s/\"commit\": \".*\"/\"commit\": \"$(git rev-parse HEAD)\"/g" package.json
          sed -i -e "s/\"version\": \".*\"/\"version\": \"$RELEASE_VERSION\"/g" package.json

      - name: node
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: ${{ env.MODELING_APP_DIR }}/package-lock.json

      - run: npm ci
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}

      - name: build
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: npm run build modeling-ce -- --prod

      - name: Login to DockerHub
        if: steps.check-tag.outputs.exists == 'false'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build and push docker
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: |
          docker build --build-arg PROJECT_NAME=modeling-ce -t ${DOCKERHUB_ORG}/activiti-modeling-app:${RELEASE_VERSION} .
          docker push docker.io/${DOCKERHUB_ORG}/activiti-modeling-app:${RELEASE_VERSION}

      - uses: Alfresco/alfresco-build-tools/.github/actions/git-commit-changes@v1.27.0
        if: steps.check-tag.outputs.exists == 'false'
        with:
          repository-directory: ${{ env.MODELING_APP_DIR }}
          username: ${{ secrets.BOT_GITHUB_USERNAME }}
          add-options: package.json
          commit-message: Release version ${{env.RELEASE_VERSION}}

      - name: Create tag
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: |
          git tag -a $RELEASE_VERSION -m "Release version $RELEASE_VERSION"
          git push origin $RELEASE_VERSION
