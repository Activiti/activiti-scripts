name: Release Activiti Cloud

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the default branch
  push:
    branches: [ gh-3903-gh-action-workflow ]
  pull_request:
    branches: [ gh-3903-gh-action-workflow ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  prepare-release:
    runs-on: ubuntu-20.04
    outputs:
      activiti-cloud-application: ${{ steps.tags.outputs.activiti-cloud-application }}
      activiti-cloud: ${{ steps.tags.outputs.activiti-cloud }}
      activiti: ${{ steps.tags.outputs.activiti }}
      BRANCH: ${{ steps.tags.outputs.BRANCH }}
      VERSION: ${{ steps.tags.outputs.VERSION }}
      NEXT_VERSION: ${{ steps.tags.outputs.NEXT_VERSION }}
      MOCK: ${{ steps.tags.outputs.MOCK }}

    steps:
      # - uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@@v1.4.0
      - name: Installing activiti-scripts
        uses: actions/checkout@v3

      - name: Checkout activiti-cloud-application
        uses: actions/checkout@v3
        with:
          repository: 'Activiti/activiti-cloud-application'
          path: 'repos/activiti-cloud-application'

      - name: Installing yq
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-yq@v1.4.0

      - name: fetch-tags-to-release
        id: tags
        run: |
          VERSION=$(yq e '.release.version' release.yaml)
          BRANCH=$(yq e '.release.version' release.yaml)
          NEXT_VERSION=$(yq e '.release.nextVersion' release.yaml)
          MOCK=$(yq e '.release.mock' release.yaml)

          ./gh-actions-scripts/fetch-activiti-tags-from.sh -t "${VERSION}-alpha*" -p repos/activiti-cloud-application

          echo "::set-output name=BRANCH::$BRANCH"
          echo "::set-output name=VERSION::$VERSION"
          echo "::set-output name=NEXT_VERSION::$NEXT_VERSION"
          echo "::set-output name=MOCK::$MOCK"

  release-docker-images:
    runs-on: ubuntu-20.04
    needs: prepare-release
    env:
      DOCKER_IMAGES: "example-runtime-bundle,activiti-cloud-query,example-cloud-connector,activiti-cloud-modeling"
      BASE_TAG: ${{needs.prepare-release.outputs.activiti-cloud-application }}
      RELEASE_TAG: ${{needs.prepare-release.outputs.VERSION }}
      DOCKERHUB_ORG: Activiti
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD}}
      MOCK: ${{ needs.prepare-release.outputs.MOCK }}
    steps:
      - name: Checkout activiti-scripts
        uses: actions/checkout@v3

      - name: tag-docker-images
        run: |
          for DOCKER_IMAGE in ${DOCKER_IMAGES//,/ }
          do

            if [ "$MOCK" == "true"]; then
              RELEASE_TAG=$RELEASE_TAG-mock
            fi

            echo "releasing $DOCKER_IMAGE from base tag $BASE_TAG with tag $RELEASE_TAG"
            #./gh-actions-scripts/tag-docker-image.sh
            echo "released."
          done

      - name: update-helm-charts
        env:
          VERSION: $(cat VERSION)
          RELEASE_VERSION: $(cat VERSION)
          HELM_ACTIVITI_VERSION: $(cat VERSION)
          SSO_PROTOCOL: https
          GATEWAY_PROTOCOL: https

        run: |
          set -e
          #./release-helm.sh
          #
          # helm delete --no-hooks ${PREVIEW_NAME} --namespace ${PREVIEW_NAME} || echo "Trying to delete chart"
          # kubectl delete ns ${PREVIEW_NAME} || echo "Trying to delete namespace"
          #

      - name: push-helm-charts
        run: |
          ./gh-actions-scripts/dummy-step.sh

  create-artifacts-staging-env:
    runs-on: ubuntu-20.04
    needs: prepare-release
    steps:
      - uses: actions/checkout@v3
      - name: create-staging-environment
        run: |
          ./gh-actions-scripts/dummy-step.sh

  release-maven-artifacts:
    runs-on: ubuntu-20.04
    needs: create-artifacts-staging-env
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        repo: ['Activiti','activiti-cloud','activiti-cloud-application']
    steps:
      - name: Installing tools
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-yq@v1.4.0

      - name: Checkout activiti-script
        uses: actions/checkout@v3

      - name: Checkout ${{ matrix.repo }}
        uses: actions/checkout@v3
        with:
          repository: 'Activiti/${{ matrix.repo }}'
          path: 'repos/${{ matrix.repo }}'

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: 'maven'

      - name: update-and-tag-pom-versions
        run: |
          env
          mvn -version
          java -version

      - name: maven-build
        working-directory: repos/${{ matrix.repo }}
        run: |
          mvn ${MAVEN_ARGS:-clean install \
              -B -V -DinstallAtEnd=true \
              -DskipTests \
              -Dhttp.keepAlive=false \
              -Dmaven.wagon.http.pool=false \
              -Dmaven.wagon.httpconnectionManager.ttlSeconds=120}

      - name: upload-artifacts
        working-directory: ./gh-actions-scripts
        run: |
          ./dummy-step.sh ${{ matrix.repo }}

  release-artifacts-staging-env:
    runs-on: ubuntu-20.04
    needs: release-maven-artifacts
    steps:
      - uses: actions/checkout@v3
      - name: create-staging-environment
        run: |
          ./gh-actions-scripts/dummy-step.sh
