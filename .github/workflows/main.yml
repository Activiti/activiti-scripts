name: Release Activiti Cloud

# TODO we should run the pre-commit tasks only in the case of
# TODO a PR modifying this repo (activiti-scripts) and not
# TODO when launching a release process

# TODO we should run the release process only when a certain
# TODO commit message is matched [ci:release]

# TODO we should support the rollback of a release if possible
# TODO with a commit message [ci:rollback]

# TODO we need to change the branches we use to perform the release
# TODO we could delete master and use develop.

# TODO after the release process succeeds we need to update the
# TODO release.yaml file with the versions of Activiti, activiti-cloud,
# TODO activiti-cloud-application used to create the release
on:
  push:
    branches: [ gh-3903-gh-action-workflow ]
  pull_request:
    branches: [ gh-3903-gh-action-workflow ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  load-release-info:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.load-descriptor.outputs.branch }}
      version: ${{ steps.load-descriptor.outputs.version }}
      next-version: ${{ steps.load-descriptor.outputs.next-version }}
      mock: ${{ steps.load-descriptor.outputs.mock }}
      tag-pattern: ${{ steps.load-descriptor.outputs.tag-pattern }}
    steps:
      - name: Installing activiti-scripts
        uses: actions/checkout@v3

      - uses: Alfresco/alfresco-build-tools/.github/actions/release-descriptor-loader@aae-8254-actions-for-activiti-script
        id: load-descriptor
        with:
          release-descriptor: release.yaml
          pre-release-suffix: alpha

  prepare-maven-release:
    runs-on: ubuntu-latest
    needs: load-release-info
    outputs:
      activiti-cloud-application-tag: ${{ steps.tags.outputs.activiti-cloud-application-tag }}
      activiti-cloud-tag: ${{ steps.tags.outputs.activiti-cloud-tag }}
      activiti-tag: ${{ steps.tags.outputs.activiti-tag }}
    steps:
      # - uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@@v1.4.0
      - name: Installing activiti-scripts
        uses: actions/checkout@v3

      - name: Checkout activiti-cloud-application
        uses: actions/checkout@v3
        with:
          repository: 'Activiti/activiti-cloud-application'
          path: 'repos/activiti-cloud-application'

      - name: fetch-tags-to-release
        id: tags
        env:
          TAG_PATTERN: ${{ needs.load-release-info.outputs.tag-pattern }}
        run: |
          ./gh-actions-scripts/fetch-activiti-tags-from.sh -t "$TAG_PATTERN" -p repos/activiti-cloud-application

  release-docker-images:
    runs-on: ubuntu-latest
    needs: [load-release-info, prepare-maven-release]
    env:
      DOCKER_IMAGES: "example-runtime-bundle,activiti-cloud-query,example-cloud-connector,activiti-cloud-modeling"
      BASE_TAG: "${{ needs.prepare-maven-release.outputs.activiti-cloud-application-tag }}"
      RELEASE_VERSION: "${{ needs.load-release-info.outputs.version }}"
      DOCKERHUB_ORG: activiti
      DOCKERHUB_USERNAME: "${{ secrets.DOCKERHUB_USERNAME }}"
      DOCKERHUB_ACCESS_TOKEN: "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}"
      MOCK: "${{ needs.load-release-info.outputs.mock }}"
    steps:
      - name: Checkout activiti-scripts
        uses: actions/checkout@v3

      - name: tag-docker-images
        working-directory: ./gh-actions-scripts
        run: |
          for DOCKER_IMAGE in ${DOCKER_IMAGES//,/ }
          do
            echo "releasing $DOCKER_IMAGE from base tag $BASE_TAG with tag $RELEASE_VERSION"
            ./tag-docker-image.sh \
              $BASE_TAG \
              $RELEASE_VERSION \
              $DOCKERHUB_ORG \
              $DOCKER_IMAGE \
              $DOCKERHUB_USERNAME \
              $DOCKERHUB_ACCESS_TOKEN
            echo "$DOCKER_IMAGE released."
          done
      - name: update-helm-charts
        env:
          VERSION: $(cat VERSION)
          RELEASE_VERSION: ${{ needs.load-release-info.outputs.version }}
          HELM_ACTIVITI_VERSION: $(cat VERSION)
          SSO_PROTOCOL: https
          GATEWAY_PROTOCOL: https

        run: |
          # TODO the release-helm scripts deploys an activiti cloud application
          # TODO launches acceptance tests. Is this necessary?
          set -e
          #./release-helm.sh
          #
          # helm delete --no-hooks ${PREVIEW_NAME} --namespace ${PREVIEW_NAME} || echo "Trying to delete chart"
          # kubectl delete ns ${PREVIEW_NAME} || echo "Trying to delete namespace"
          #
      - name: push-helm-charts
        run: |
          ./gh-actions-scripts/dummy-step.sh

  release-modeling-app:
    runs-on: ubuntu-latest
    needs: load-release-info
    env:
      MODELING_APP_DIR: modeling-app
      MODELING_APP_BASE_REF: master
      DOCKERHUB_ORG: activiti
      RELEASE_VERSION: "${{ needs.load-release-info.outputs.VERSION }}"
    steps:
      - name: Checkout modeling-app
        uses: actions/checkout@v3
        with:
          path: ${{ env.MODELING_APP_DIR }}
          repository: Activiti/activiti-modeling-app
          ref: ${{ env.MODELING_APP_BASE_REF }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: Alfresco/alfresco-build-tools/.github/actions/git-check-existing-tag@aae-8254-actions-for-activiti-script
        id: check-tag
        with:
          tag: ${{ env.RELEASE_VERSION }}
          repository-directory: ${{ env.MODELING_APP_DIR }}

      - name: update commit ref and version
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: |
          sed -i -e "s/\"commit\": \".*\"/\"commit\": \"$(git rev-parse HEAD)\"/g" package.json
          sed -i -e "s/\"version\": \".*\"/\"version\": \"$RELEASE_VERSION\"/g" package.json

      - name: build
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: |
          npm install
          npm run build -- --prod

      - name: Login to DockerHub
        if: steps.check-tag.outputs.exists == 'false'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build and push docker
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: |
          docker build --build-arg PROJECT_NAME=modeling-ce -t ${DOCKERHUB_ORG}/activiti-modeling-app:${RELEASE_VERSION} .
          docker push docker.io/${DOCKERHUB_ORG}/activiti-modeling-app:${RELEASE_VERSION}

      - uses: Alfresco/alfresco-build-tools/.github/actions/git-commit-changes@v1.9.2
        if: steps.check-tag.outputs.exists == 'false'
        with:
          repository-directory: ${{ env.MODELING_APP_DIR }}
          username: ${{ secrets.BOT_GITHUB_USERNAME }}
          add-options: package.json
          commit-message: Release version ${{env.RELEASE_VERSION}}

      - name: Create tag
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: ${{ env.MODELING_APP_DIR }}
        run: |
          git tag -a $RELEASE_VERSION -m "Release version $RELEASE_VERSION"
          git push origin $RELEASE_VERSION

  prepare-helm-release:
    runs-on: ubuntu-latest
    needs: load-release-info
    outputs:
      common-chart-tag: ${{steps.tags.outputs.common-chart-tag}}
      full-chart-tag: ${{steps.tags.outputs.full-chart-tag}}
    env:
      RELEASE_VERSION: "${{ needs.load-release-info.outputs.version }}"
      FULL_CHART_DIR: full-chart
    steps:
      - name: Checkout full chart
        uses: actions/checkout@v3
        with:
          path: ${{ env.FULL_CHART_DIR }}
          repository: Activiti/activiti-cloud-full-chart
      - uses: Alfresco/alfresco-build-tools/.github/actions/git-latest-tag@aae-8254-actions-for-activiti-script
        with:
          tag-pattern: ${{ needs.load-release-info.outputs.tag-pattern }}
          repository-directory: ${{ env.FULL_CHART_DIR }}
        id: get-last-tag
      - name: Get tags
        id: tags
        working-directory: ${{ env.FULL_CHART_DIR }}
        env:
          FULL_CHART_TAG: ${{steps.get-latest-tag.outputs.latest-tag}}
        run: |
          git checkout $FULL_CHART_TAG
          COMMON_CHART_TAG=$(yq e '.dependencies[] | select (.alias == "activiti-cloud-modeling") | .version' charts/activiti-cloud-full-example/requirements.yaml)
          echo "::set-output name=common-chart-tag::$COMMON_CHART_TAG"
          echo "::set-output name=full-chart-tag::$FULL_CHART_TAG"

  release-common-chart:
    runs-on: ubuntu-latest
    needs: [load-release-info, prepare-helm-release]
    env:
      COMMON_CHART_DIR: common-chart
    steps:
      - name: Checkout common chart
        uses: actions/checkout@v3
        env:
          BASE_TAG: ${{needs.prepare-helm-release.outputs.common-chart-tag}}
        with:
          path: ${{ env.COMMON_CHART_DIR }}
          repository: Activiti/activiti-cloud-common-chart
          ref: ${{ env.BASE_TAG }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Release common chart
        uses: Alfresco/alfresco-build-tools/.github/actions/helm-release-and-publish@aae-8254-actions-for-activiti-script
        with:
          version: ${{ needs.load-release-info.outputs.version }}
          chart-dir: charts/common
          chart-repository-dir: ${{ env.COMMON_CHART_DIR }}
          helm-repository: Activiti/activiti-cloud-helm-charts
          helm-repository-branch: gh-pages
          helm-repository-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          git-username:  ${{ secrets.BOT_GITHUB_USERNAME }}

  release-full-chart:
    runs-on: ubuntu-latest
    needs: [load-release-info, prepare-helm-release, release-common-chart]
    env:
      FULL_CHART_DIR: full-chart
      CHART_FILES_DIR: charts/activiti-cloud-full-example
      VERSION: ${{needs.load-release-info.outputs.version}}
    steps:
      - name: Checkout full chart
        uses: actions/checkout@v3
        env:
          BASE_TAG: ${{ needs.prepare-helm-release.outputs.full-chart-tag }}
        with:
          path: ${{ env.FULL_CHART_DIR }}
          repository: Activiti/activiti-cloud-full-chart
          ref: ${{ env.BASE_TAG }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Update dependencies
        working-directory: ${{ env.FULL_CHART_DIR }}/${{env.CHART_FILES_DIR}}
        run: |
          yq e '(.dependencies.[] | select(.name == "common").version) = env(VERSION)' -i requirements.yaml
          yq -i e '.runtime-bundle.image.tag = env(VERSION)' values.yaml
          yq -i e '.activiti-cloud-query.image.tag = env(VERSION)' values.yaml
          yq -i e '.activiti-cloud-connector.image.tag = env(VERSION)' values.yaml
          yq -i e '.activiti-cloud-modeling.image.tag = env(VERSION)' values.yaml
          yq -i e '.activiti-cloud-identity-adapter.image.tag = env(VERSION)' values.yaml
          yq -i e '.activiti-modeling-app.image.tag = env(VERSION)' values.yaml

      - name: Wait for common chart to be published
        uses: ./.github/actions/wait-for-chart
        with:
          chart-name: common
          version: ${{ needs.load-release-info.outputs.version }}
          helm-repo-name: activiti-cloud-helm-charts
          helm-repo-url: https://activiti.github.io/activiti-cloud-helm-charts

      - name: Release full chart
        uses: Alfresco/alfresco-build-tools/.github/actions/helm-release-and-publish@aae-8254-actions-for-activiti-script
        with:
          version: ${{ needs.load-release-info.outputs.version }}
          chart-dir: ${{env.CHART_FILES_DIR}}
          chart-repository-dir: ${{ env.FULL_CHART_DIR }}
          helm-repository: Activiti/activiti-cloud-helm-charts
          helm-repository-branch: gh-pages
          helm-repository-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          git-username:  ${{ secrets.BOT_GITHUB_USERNAME }}


  create-artifacts-staging-repo:
    runs-on: ubuntu-latest
    needs: load-release-info
    outputs:
      staging-repository: ${{ steps.staging.outputs.staging-repository }}
    steps:
      - name: create-staging-repository
        id: staging
        uses: Alfresco/alfresco-build-tools/.github/actions/nexus-create-staging@aae-8254-actions-for-activiti-script
        with:
          staging-description: Activiti staging ${{ needs.load-release-info.outputs.version }}
          nexus-profile-id: "${{ secrets.NEXUS_ACTIVITI7_PROFILE_ID }}"
          nexus-username: "${{ secrets.NEXUS_USERNAME }}"
          nexus-password: "${{ secrets.NEXUS_PASSWORD }}"

  release-activiti:
    runs-on: ubuntu-latest
    needs: [load-release-info, prepare-maven-release, create-artifacts-staging-repo]
    steps:
      - name: Checkout activiti-scripts
        uses: actions/checkout@v3

      - uses: ./.github/actions/release-maven
        with:
          repo: Activiti
          base-tag: ${{  needs.prepare-maven-release.outputs.activiti-tag }}
          release-version: ${{ needs.load-release-info.outputs.version }}
          staging-repository-id: ${{ needs.create-artifacts-staging-repo.outputs.staging-repository }}
          git-username: ${{ secrets.BOT_GITHUB_USERNAME }}
          github-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          gpg-passphrase: "${{ secrets.GPG_PASSPHRASE }}"
          gpg-secret-keys: "${{ secrets.GPG_SECRET_KEYS }}"
          gpg-owner-trust: "${{ secrets.GPG_OWNERTRUST }}"
          nexus-username: "${{ secrets.NEXUS_USERNAME }}"
          nexus-password: "${{ secrets.NEXUS_PASSWORD }}"

  release-activiti-cloud:
    runs-on: ubuntu-latest
    needs: [load-release-info, prepare-maven-release, create-artifacts-staging-repo, release-activiti]
    steps:
      - name: Checkout activiti-scripts
        uses: actions/checkout@v3

      - uses: ./.github/actions/release-maven
        with:
          repo: activiti-cloud
          base-tag: ${{  needs.prepare-maven-release.outputs.activiti-cloud-tag }}
          release-version: ${{ needs.load-release-info.outputs.version }}
          staging-repository-id: ${{ needs.create-artifacts-staging-repo.outputs.staging-repository }}
          git-username: ${{ secrets.BOT_GITHUB_USERNAME }}
          github-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          gpg-passphrase: "${{ secrets.GPG_PASSPHRASE }}"
          gpg-secret-keys: "${{ secrets.GPG_SECRET_KEYS }}"
          gpg-owner-trust: "${{ secrets.GPG_OWNERTRUST }}"
          nexus-username: "${{ secrets.NEXUS_USERNAME }}"
          nexus-password: "${{ secrets.NEXUS_PASSWORD }}"

  release-activiti-cloud-application:
    runs-on: ubuntu-latest
    needs: [load-release-info, prepare-maven-release, create-artifacts-staging-repo, release-activiti-cloud]
    steps:
      - name: Checkout activiti-scripts
        uses: actions/checkout@v3

      - uses: ./.github/actions/release-maven
        with:
          repo: activiti-cloud-application
          base-tag: ${{  needs.prepare-maven-release.outputs.activiti-cloud-application-tag }}
          release-version: ${{ needs.load-release-info.outputs.version }}
          staging-repository-id: ${{ needs.create-artifacts-staging-repo.outputs.staging-repository }}
          git-username: ${{ secrets.BOT_GITHUB_USERNAME }}
          github-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          gpg-passphrase: "${{ secrets.GPG_PASSPHRASE }}"
          gpg-secret-keys: "${{ secrets.GPG_SECRET_KEYS }}"
          gpg-owner-trust: "${{ secrets.GPG_OWNERTRUST }}"
          nexus-username: "${{ secrets.NEXUS_USERNAME }}"
          nexus-password: "${{ secrets.NEXUS_PASSWORD }}"

  release-artifacts-staging-env:
    runs-on: ubuntu-20.04
    needs: release-activiti-cloud-application
    steps:
      - uses: actions/checkout@v3
      - name: close-and-release-staging-environment
        run: |
          # TODO Should we close and release the nexus artifact staging env?
          ./gh-actions-scripts/dummy-step.sh

  # TODO should this step be skipped for the mock release?
  finalize-branch:
    runs-on: ubuntu-20.04
    needs: [load-release-info, release-activiti-cloud-application]
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        # TODO Should we add also activiti-cloud-modeling?
        repo: ['Activiti','activiti-cloud','activiti-cloud-application']
    env:
      NEXT_VERSION: "${{ needs.load-release-info.outputs.next-version }}"
    steps:
      - name: Checkout ${{ matrix.repo }}
        uses: actions/checkout@v3
        with:
          repository: 'Activiti/${{ matrix.repo }}'
          path: 'repos/${{ matrix.repo }}'
          ref: '${{ needs.load-release-info.outputs.branch }}'

      - name: update-to-next-version
        working-directory: repos/${{ matrix.repo }}
        run: |
          # TODO Check that the update is updating all the needed dependencies
          # TODO e.g.: activiti-cloud 7.3.1-SNAPSHOT should refer to Activiti 7.3.1-SNAPSHOT
          mvn versions:set -DnewVersion=$NEXT_VERSION -DgenerateBackupPoms=false

      - name: commit-and-push
        working-directory: repos/${{ matrix.repo }}
        run: |
          # TODO which user should commit and push?
          echo "commit and push repository"
          cat pom.xml
