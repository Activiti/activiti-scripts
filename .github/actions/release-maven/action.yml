name: Release maven project
description: Release Maven project

inputs:
  repo:
    description: "Repository to be released"
    required: true
  base-tag:
    description: "The name of the tag from where the release will be created"
    required: true
  release-version:
    description: "The name of the version to be released"
    required: true
  staging-repository-id:
    description: "The id of the staging repository where the release artifacts will be stored"
    required: true
  github-token:
    description: "The token to used to clone the repositories"
    required: true
  git-username:
    description: "The username for git commit"
    required: true
  gpg-passphrase:
    description: "GPG passphrase"
    required: true
  gpg-secret-keys:
    description: "GPG secrets key"
    required: true
  gpg-owner-trust:
    description: "GPG Owner trust"
    required: true
  nexus-username:
    description: "Nexus user name"
    required: true
  nexus-password:
    description: "Nexus password"
    required: true

runs:
  using: composite
  steps:
    - name: set global properties
      shell: bash
      env:
        REPO_DIR: repos/${{ inputs.repo }}
        RELEASE_VERSION: ${{ inputs.release-version }}
      run: |
        echo "REPO_DIR=$REPO_DIR" >> $GITHUB_ENV
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

    - name: Checkout ${{ inputs.repo }}
      uses: actions/checkout@v3
      with:
        repository: 'Activiti/${{ inputs.repo }}'
        ref: ${{ inputs.base-tag }}
        path: '${{ env.REPO_DIR }}'
        token: ${{ inputs.github-token }}

    - uses: Alfresco/alfresco-build-tools/.github/actions/git-check-existing-tag@aae-8254-actions-for-activiti-script
      id: check-tag
      with:
        tag: ${{ env.RELEASE_VERSION }}
        repository-directory: ${{ env.REPO_DIR }}

    - name: Set up JDK 11
      if: steps.check-tag.outputs.exists == false
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
        cache: 'maven'

    - name: Set up M2_DIR
      if: steps.check-tag.outputs.exists == false
      shell: bash
      run: echo "M2_DIR=$HOME/.m2" >> $GITHUB_ENV

    - name: Download setting.xml
      if: steps.check-tag.outputs.exists == false
      uses: actions/download-artifact@v3
      with:
        name: maven-settings-xml
        path: ${{ env.M2_DIR }}

    - name: Display M2 configuration
      if: steps.check-tag.outputs.exists == false
      shell: bash
      run: |
        echo ".m2 dir: $(pwd)"
        cat settings.xml
      working-directory: ${{ env.M2_DIR }}

    - name: Configure GPG
      if: steps.check-tag.outputs.exists == false
      shell: bash
      env:
        GPG_SECRET_KEYS: "${{ inputs.gpg-secret-keys }}"
        GPG_OWNERTRUST: "${{ inputs.gpg-owner-trust }}"
      run: |
        gpg --version
        echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
        echo $GPG_OWNERTRUST | gpg --import-ownertrust  --no-tty --batch --yes

    - name: update-pom-to-release-version
      if: steps.check-tag.outputs.exists == false
      working-directory: ${{ env.REPO_DIR }}
      shell: bash
      env:
        BASE_TAG: ${{ inputs.base-tag }}
      run: |
        # TODO Check that the update is updating all the needed dependencies
        # TODO e.g.: activiti-cloud 7.3.1 should refer to Activiti 7.3.1
        ../../gh-actions-scripts/update-pom-version.sh "$RELEASE_VERSION" "$BASE_TAG"

    - name: maven-build-and-upload
      if: steps.check-tag.outputs.exists == false
      working-directory: ${{ env.REPO_DIR }}
      shell: bash
      env:
        GPG_PASSPHRASE: "${{ inputs.gpg-passphrase }}"
        GPG_SECRET_KEYS: "${{ inputs.gpg-secret-keys }}"
        GPG_OWNERTRUST: "${{ inputs.gpg-owner-trust }}"
        NEXUS_USERNAME: "${{ inputs.nexus-username }}"
        NEXUS_PASSWORD: "${{ inputs.nexus-password }}"
        NEXUS_URL: "https://artifacts.alfresco.com/nexus"
        STAGING_REPOSITORY_ID: ${{ inputs.staging-repository-id }}
      run: |
        echo "Deploying to repository $STAGING_REPOSITORY_ID"
        mvn clean deploy \
          -DperformRelease \
          -DskipTests \
          -Dmaven.compiler.release=11 \
          -Dmaven.artifact.threads=30 \
          -B \
          -DaltReleaseDeploymentRepository=nexus-releases-staging-fixed::default::"${NEXUS_URL}"/service/local/staging/deployByRepositoryId/"$STAGING_REPOSITORY_ID " \
          -Dhttp.keepAlive=false \
          -Dmaven.wagon.http.pool=false \
          -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

    - name: Commit changes
      if: steps.check-tag.outputs.exists == false
      uses: Alfresco/alfresco-build-tools/.github/actions/git-commit-changes@v1.9.0
      with:
        username: ${{ inputs.git-username }}
        add-options: -u
        commit-message: "Release version ${{ inputs.release-version}}"
        repository-directory: ${{ env.REPO_DIR }}

    - name: create tag
      if: steps.check-tag.outputs.exists == false
      working-directory: ${{ env.REPO_DIR }}
      shell: bash
      run: |
        git tag -f -a "${RELEASE_VERSION}" -m "Release version ${RELEASE_VERSION}"
        git push origin "${RELEASE_VERSION}"
